"use strict";

(function () {
	//for SVG-elements in IE
	svg4everybody();
})();

//запустить какую-либо функцию, если element существует на странице
var forElement = function forElement(element) {
	return new Promise(function (resolve) {
		if (element) {
			resolve();
		}
	});
};

//проверка на мобильное устройство
var isMobile = {
	Android: function Android() {
		return navigator.userAgent.match(/Android/i);
	},
	BlackBerry: function BlackBerry() {
		return navigator.userAgent.match(/BlackBerry/i);
	},
	iOS: function iOS() {
		return navigator.userAgent.match(/iPhone|iPad|iPod/i);
	},
	Opera: function Opera() {
		return navigator.userAgent.match(/Opera Mini/i);
	},
	Windows: function Windows() {
		return navigator.userAgent.match(/IEMobile/i);
	},

	any: function any() {
		return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows();
	}
};
//Flip effect
(function () {
	document.addEventListener("DOMContentLoaded", function () {

		var authorize = document.getElementById("authorize"),
		    flipClass = "flipper";

		//login form
		if (authorize) {
			authorize.addEventListener("click", runFlip);

			//перевернуть карту при клике вне ее
			document.body.addEventListener("click", function (e) {
				if (!e) e = window.event;
				var elems = e.path,
				    flag = true;

				for (var i = 0; i < elems.length; i++) {
					if (elems[i].id === "authorize" || elems[i].id === "login") {
						flag = false;
					}
				}

				if (flag) document.getElementById("login").classList.remove(flipClass);
			});
		}

		//flip effect
		function runFlip() {
			var elem = document.getElementById(this.dataset.flipId),
			    classes = elem.classList;

			classes.contains(flipClass) === true ? classes.remove(flipClass) : classes.add(flipClass);
		}
	});
})();

//Parallax
(function () {
	document.addEventListener("DOMContentLoaded", function () {
		var layers = document.getElementsByClassName("parallax__layer"),
		    parallax = document.getElementById("parallax"),
		    wrapper = document.getElementsByClassName("wrapper")[0],
		    noParallax = document.createElement("div");

		var moveLaers = function moveLaers(e) {
			e = e || event;

			var initialX = window.innerWidth / 2 - e.pageX,
			    initialY = window.innerHeight / 2 - e.pageY;

			for (var i = 0; i < layers.length; i++) {
				var divider = void 0;

				if (layers.length >= 5) divider = i / 100;else divider = (i + 1) / 100;

				var X = initialX * divider,
				    Y = initialY * divider,
				    transformStyle = "translate3d(" + X + "px, " + Y + "px, " + "0)";

				layers[i].style.transform = transformStyle;
			}
		};

		if (isMobile.any()) {
			wrapper.removeChild(parallax);
			noParallax.className = "parallax bg_forest-bottom";
			wrapper.insertBefore(noParallax, document.getElementsByClassName("footer")[0]);
		} else {
			window.addEventListener("mousemove", moveLaers);
		}
	});
})();

//Main menu
//jQuery
$(function () {
	$('#toggle').on('click', function () {
		$(this).toggleClass('hamburger_on');
		$('#main-menu').toggleClass('main-menu_target');
	});
});

//Preloader
//jQuery
var preloader = function () {
	var percents = 0,
	    preloader = $("#preloader");

	var imgPath = $("*").map(function (i, el) {
		var bg = $(el).css("background-image"),
		    img = $(el).is("img"),
		    path = "";

		if (bg != "none") {
			path = bg.replace('url("', '').replace('")', '');;
		}

		if (img) {
			path = $(el).attr("src");
		}

		if (path) return path;
	});

	var setPercents = function setPercents(total, current) {
		var persents = Math.ceil(current / total * 100);

		$("#percrnts").text(persents);

		if (persents >= 100) {
			preloader.fadeOut();
		}
	};

	var loadImages = function loadImages(images) {

		if (!images.length) preloader.fadeOut();

		images.forEach(function (img, i, images) {
			var fakeImage = $("<img>", {
				attr: {
					src: img
				}
			});

			fakeImage.on("load error", function () {
				percents++;
				setPercents(images.length, percents);
			});
		});
	};

	return {
		init: function init() {
			var imgs = imgPath.toArray();

			loadImages(imgs);
		}
	};
}();

$(function () {
	preloader.init();
});

//Sidebar
//jQuery
var blog = document.getElementById("blog");

//если элемент blog существует
forElement(blog).then(function () {
	//модуль Sidebar
	var scrollSidebar = function () {
		var sidebar = $(".sidebar"),
		    menu = $(".sidebar-nav"),
		    link = $(".sidebar__link"),
		    article = $(".article"),
		    body = document.body,
		    isPositionArticle = [],
		    offsetHeight = $(".blog__content")[0].offsetTop - $(".main")[0].offsetTop;

		var positionArticle = function positionArticle(el) {
			for (var i = 0; i < el.length; i++) {
				isPositionArticle[i] = {};
				isPositionArticle[i].top = el.eq(i).offset().top - offsetHeight;
				isPositionArticle[i].bottom = isPositionArticle[i].top + el.eq(i).innerHeight();
			}
		};

		var menuFixed = function menuFixed() {
			var scroll = window.pageYOffset;

			if (scroll < article.offset().top) {
				sidebar.removeClass("fixed");
				$(".blog__content").removeClass("nav-fixed");
			} else {
				sidebar.addClass("fixed");
				$(".blog__content").addClass("nav-fixed");
			}
		};

		var scrollPage = function scrollPage(e) {
			var scroll = window.pageYOffset;

			for (var i = 0; i < isPositionArticle.length; i++) {
				if (scroll >= isPositionArticle[i].top && scroll <= isPositionArticle[i].bottom) {
					link.eq(i).addClass("sidebar__link_active").siblings().removeClass("sidebar__link_active");
				}
			}
		};

		var clickOnMenu = function clickOnMenu(e) {
			var index = $(e.target).index();
			var sectionOffset = article.eq(index).offset().top;
			$(document).off("scroll", scrollPage);
			$("body, html").animate({
				"scrollTop": sectionOffset
			}, function () {
				$(e.target).addClass("sidebar__link_active").siblings().removeClass("sidebar__link_active");
				$(document).on("scroll", scrollPage);
			});
		};

		var addListener = function addListener() {
			$(menu).on("click", clickOnMenu);

			$(document).on("scroll", scrollPage);
			$(document).on("scroll", menuFixed);

			$(window).on("load", function (e) {
				positionArticle(article);
			});

			$(window).on("resize", function (e) {
				positionArticle(article);
			});
		};

		return {
			init: addListener
		};
	}();

	scrollSidebar.init();

	//toggle class 
	$("#btn").on("click", function () {
		$("#blog").toggleClass("on");
	});
});

//Slider
var slider = document.getElementById("slider");

forElement(slider).then(function () {
	window.onload = function () {
		Slider.init();
	};

	var Slider = {
		init: function init() {
			this.display = document.getElementById("display");
			this.header = document.getElementById("header");
			this.description = document.getElementById("description");
			this.siteLink = document.getElementById("siteLink");
			this.btnPrew = document.getElementById("btnPrew");
			this.btnNext = document.getElementById("btnNext");
			this.btnPrewImg = document.getElementById("btnPrewImg");
			this.btnNextImg = document.getElementById("btnNextImg");

			this.works = [];

			this.duration = 1000;

			this.display.addEventListener("click", function () {
				Slider.animate({
					duration: 3000,
					timing: function timing(timeFraction) {
						return timeFraction;
					},
					draw: function draw(progress) {
						console.log(progress);
						Slider.display.style.opacity = progress;
					}
				});
			});

			//Ajax
			this.data("/assets/json/slider.json").then(function (dataArray) {
				for (var i = 0; i < dataArray.length; i++) {
					Slider.works.push(dataArray[i]);
					Slider.works[i].index = i;
				}
				//заполнить слайдер первоначальными данными
				Slider.clicking(0, dataArray.length - 1, 1);
			}).catch(function (status) {
				console.error("Код ответа: ", status);
			});

			//Events
			this.btnPrew.addEventListener("click", function (event) {
				var indexes = [Slider.display.dataset.index, Slider.btnPrewImg.dataset.index, Slider.btnNextImg.dataset.index];

				Slider.toggleIndexes(indexes, "minus");
				Slider.addAnimate(indexes[0], indexes[1], indexes[2]);
			});

			this.btnNext.addEventListener("click", function () {
				var indexes = [Slider.display.dataset.index, Slider.btnPrewImg.dataset.index, Slider.btnNextImg.dataset.index];

				Slider.toggleIndexes(indexes, "plus");
				Slider.addAnimate(indexes[0], indexes[1], indexes[2]);
			});
		},
		data: function data(url) {
			return new Promise(function (resolve, reject) {
				var xhr = new XMLHttpRequest();
				xhr.open("GET", url, true);
				xhr.responseType = "json";
				xhr.send();
				xhr.onreadystatechange = function () {
					if (xhr.readyState !== 4) return;
					if (xhr.status !== 200) {
						reject(xhr.status);
					} else {
						resolve(xhr.response);
					}
				};
			});
		},
		addTextBlock: function addTextBlock(index) {
			this.header.innerText = this.works[index].title;
			this.description.innerText = this.works[index].desc;
			this.siteLink.href = this.works[index].link;
		},
		addDisplay: function addDisplay(index) {
			this.display.src = this.works[index].image;
			this.display.alt = this.works[index].title;
			this.display.dataset.index = index;
		},
		addNextImg: function addNextImg(index) {
			this.btnNextImg.src = this.works[index].preview;
			this.btnNextImg.alt = this.works[index].title;
			this.btnNextImg.dataset.index = index;
		},
		addPrewImg: function addPrewImg(index) {
			this.btnPrewImg.src = this.works[index].preview;
			this.btnPrewImg.alt = this.works[index].title;
			this.btnPrewImg.dataset.index = index;
		},
		clicking: function clicking(displayIndex, prewIndex, nextIndex) {
			//main content in the slider: big picture, title, description and link
			this.addDisplay(displayIndex);
			this.addTextBlock(displayIndex);
			//small image on the button "previous work"
			this.addPrewImg(prewIndex);
			//small image on the button "next work"
			this.addNextImg(nextIndex);
		},
		toggleIndexes: function toggleIndexes(arr, type) {
			var max = this.works.length - 1;

			for (var i = 0; i < arr.length; i++) {
				switch (type) {
					case "plus":
						if (arr[i] == max) arr[i] = 0;else arr[i]++;
						break;
					case "minus":
						if (arr[i] == 0) arr[i] = max;else arr[i]--;
						break;
				}
			}
		},
		animate: function animate(options) {
			var start = performance.now();

			requestAnimationFrame(function animate(time) {
				// timeFraction от 0 до 1
				var timeFraction = (time - start) / options.duration;
				if (timeFraction > 1) timeFraction = 1;

				// текущее состояние анимации
				var progress = timeFraction;
				//функция, описывающая анимацию
				options.draw(progress);

				if (timeFraction < 1) {
					requestAnimationFrame(animate);
				}
			});
		},
		addAnimate: function addAnimate(i, j, k) {
			//анимация до переключения слайда
			Slider.animate({
				duration: Slider.duration,
				draw: function draw(progress) {
					Slider.btnPrewImg.style.marginTop = progress * 600 + "px";
					Slider.btnNextImg.style.marginTop = progress * -600 + "px";
					Slider.display.style.opacity = 1 - progress;
				}
			});

			setTimeout(function () {
				Slider.clicking(i, j, k);

				Slider.btnPrewImg.style.marginTop = 0 + "px";
				Slider.btnPrewImg.style.height = 0 + "%";
				Slider.btnNextImg.style.marginTop = 0 + "px";
				Slider.btnNextImg.style.height = 0 + "%";

				//анимация после переключения слайда
				Slider.animate({
					duration: Slider.duration,
					draw: function draw(progress) {
						Slider.btnPrewImg.style.height = progress * 100 + "%";
						Slider.btnNextImg.style.height = progress * 100 + "%";
						Slider.display.style.opacity = progress;
					}
				});
			}, Slider.duration + 100);
		}
	};
});

//Send mail

var formMail = document.querySelector('#mail');

if (formMail) {
	formMail.addEventListener('submit', prepareSendMail);
}

function prepareSendMail(e) {
	e.preventDefault();
	var data = {
		name: formMail.name.value,
		email: formMail.email.value,
		text: formMail.text.value
	};
	prepareSend('/works', formMail, data);
}

function prepareSend(url, form, data, cb) {
	var resultContainer = form.querySelector('.status');
	resultContainer.innerHTML = 'Sending...';
	sendAjaxJson(url, data, function (data) {
		form.reset();
		resultContainer.innerHTML = data;
		if (cb) {
			cb(data);
		}
	});
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
